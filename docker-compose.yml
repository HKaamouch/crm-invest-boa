version: '3.8'

services:
    # Application PHP-FPM
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            target: ${APP_ENV:-development}
        container_name: ${APP_NAME:-crm-invest}-app
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
            - ./storage/app:/var/www/html/storage/app
            - ./storage/logs:/var/www/html/storage/logs
        environment:
            - APP_ENV=${APP_ENV:-local}
            - APP_DEBUG=${APP_DEBUG:-true}
            - DB_CONNECTION=${DB_CONNECTION:-pgsql}
            - DB_HOST=${DB_HOST:-postgres}
            - DB_PORT=${DB_PORT:-5432}
            - DB_DATABASE=${DB_DATABASE:-crm_investisseurs}
            - DB_USERNAME=${DB_USERNAME:-crm_user}
            - DB_PASSWORD=${DB_PASSWORD:-secret123}
            - MAIL_MAILER=${MAIL_MAILER:-smtp}
            - MAIL_HOST=${MAIL_HOST:-mailpit}
            - MAIL_PORT=${MAIL_PORT:-1025}
            - MAIL_USERNAME=${MAIL_USERNAME:-null}
            - MAIL_PASSWORD=${MAIL_PASSWORD:-null}
            - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-null}
        depends_on:
            - postgres
            - mailpit
        networks:
            - crm-network

    # Nginx Web Server
    nginx:
        image: nginx:1.25-alpine
        container_name: ${APP_NAME:-crm-invest}-nginx
        restart: unless-stopped
        ports:
            - "${NGINX_PORT:-80}:80"
            - "${NGINX_SSL_PORT:-443}:443"
        volumes:
            - .:/var/www/html:ro
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./docker/nginx/sites/:/etc/nginx/conf.d/:ro
            - ./docker/nginx/ssl:/etc/nginx/ssl:ro
            - ./storage/logs/nginx:/var/log/nginx
        depends_on:
            - app
        networks:
            - crm-network

    # Node.js pour Vite
    node:
        image: node:20-alpine
        container_name: ${APP_NAME:-crm-invest}-node
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - /var/www/html/node_modules
        command: sh -c "npm install && npm run dev"
        ports:
            - "${VITE_PORT:-5173}:5173"
        environment:
            - NODE_ENV=${NODE_ENV:-development}
        networks:
            - crm-network

    # PostgreSQL Database
    postgres:
        image: postgres:16-alpine
        container_name: ${APP_NAME:-crm-invest}-postgres
        restart: unless-stopped
        ports:
            - "${DB_PORT:-5432}:5432"
        environment:
            POSTGRES_DB: ${DB_DATABASE:-crm_investisseurs}
            POSTGRES_USER: ${DB_USERNAME:-crm_user}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-secret123}
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./docker/postgres/init:/docker-entrypoint-initdb.d
            - ./storage/logs/postgres:/var/log/postgresql
        networks:
            - crm-network

    # pgAdmin
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: ${APP_NAME:-crm-invest}-pgadmin
        restart: unless-stopped
        ports:
            - "${PGADMIN_PORT:-8080}:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@crm-invest.local}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin_data:/var/lib/pgadmin
            - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
        depends_on:
            - postgres
        networks:
            - crm-network

    # Mailpit (SMTP Testing)
    mailpit:
        image: axllent/mailpit:latest
        container_name: ${APP_NAME:-crm-invest}-mailpit
        restart: unless-stopped
        ports:
            - "${MAILPIT_SMTP_PORT:-1025}:1025"
            - "${MAILPIT_HTTP_PORT:-8025}:8025"
        environment:
            MP_SMTP_AUTH_ACCEPT_ANY: 1
            MP_SMTP_AUTH_ALLOW_INSECURE: 1
        networks:
            - crm-network

    # Redis (Optionnel - pour cache et sessions)
    redis:
        image: redis:7-alpine
        container_name: ${APP_NAME:-crm-invest}-redis
        restart: unless-stopped
        ports:
            - "${REDIS_PORT:-6379}:6379"
        command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
        volumes:
            - redis_data:/data
        networks:
            - crm-network

volumes:
    postgres_data:
        driver: local
    pgadmin_data:
        driver: local
    redis_data:
        driver: local

networks:
    crm-network:
        driver: bridge
